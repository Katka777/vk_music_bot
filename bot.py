from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
import requests
import re

API_TOKEN = "7785726417:AAGeYXot4tds4ULAmrII11-63fuwr7a8z8A"
VK_TOKEN = "vk1.a.SQ83e3LVTMu_LUxhz-N8IHbqWYvH2RRprkVYwfexVh8iBrkiR2tbifAaKt9koHn6W7_10alM6gVz2CO_EU5uFAr9yH94YtREciABxiP1E7zHDVIqI0O461MB2oeFnkKpg-XaD9pA9JAs1DgAtha1ud3F8N6t6OBjodldmnTm_qR0y9BdqJOrlJsidrBChr28"

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton("üéµ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç—Ä–µ–∫–∏ –∏–∑ –í–ö"))
    return kb

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ–π VK –ø—Ä–æ—Ñ–∏–ª—å, –∏ —è –∑–∞–≥—Ä—É–∂—É –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ üéß", reply_markup=main_menu())

@dp.message_handler(lambda msg: "vk.com" in msg.text)
async def get_tracks(message: types.Message):
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º username –∏–∑ —Å—Å—ã–ª–∫–∏
        match = re.search(r"https?://(?:www\.)?vk\.com/([a-zA-Z0-9_\.]+)", message.text)
        if not match:
            await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Å—Å—ã–ª–∫—É. –£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏–ª –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ VK –ø—Ä–æ—Ñ–∏–ª—å.")
            return

        username = match.group(1)

        # –ü–æ–ª—É—á–∞–µ–º user_id –ø–æ username
        user_info = requests.get(
            "https://api.vk.com/method/users.get",
            params={
                "access_token": VK_TOKEN,
                "v": "5.131",
                "user_ids": username
            }
        ).json()

        user_id = user_info["response"][0]["id"]

        # –ü–æ–ª—É—á–∞–µ–º –∞—É–¥–∏–æ
        audio_response = requests.get(
            "https://api.vk.com/method/audio.get",
            params={
                "access_token": VK_TOKEN,
                "v": "5.131",
                "owner_id": user_id,
                "count": 10
            }
        )

        print("–û—Ç–≤–µ—Ç –æ—Ç VK:", audio_response.text)  # <-- –í–ê–ñ–ù–û!

        audio = audio_response.json()

        if "response" in audio:
            tracks = audio["response"]["items"]
            msg = "üé∂ –°–ø–∏—Å–æ–∫ —Ç—Ä–µ–∫–æ–≤:\n\n"
            for i, t in enumerate(tracks):
                title = f"{t.get('artist', '??')} ‚Äî {t.get('title', '??')}"
                duration = t.get("duration", 0)
                minutes = duration // 60
                seconds = duration % 60
                msg += f"{i+1}. {title} [{minutes}:{seconds:02d}]\n"
            await message.answer(msg)
        else:
            await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏–æ. –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ—Ñ–∏–ª—å –∑–∞–∫—Ä—ã—Ç –∏–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω.")

    except Exception as e:
        await message.answer("‚ùó –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–µ–∫–æ–≤.")
        import traceback
        traceback.print_exc()
        print("–û—à–∏–±–∫–∞:", e)

if __name__ == "__main__":
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
